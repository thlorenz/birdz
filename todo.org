* UI Features

** Tinder like Drag Exploration [7/7]
:LOGBOOK:
CLOCK: [2020-05-11 Mon 18:49]--[2020-05-11 Mon 19:19] =>  0:30
CLOCK: [2020-05-08 Fri 09:22]--[2020-05-08 Fri 09:34] =>  0:12
:END:

- [X] create app that runs in OSX, Android and iOS
- [X] add yaml support to emacs
- [X] adapt emacs settings to work with dart efficiently
- [X] figure out hot restart/reload from emacs
- [X] get sample bird asset pic
- [X] load pic into a container
- [X] research how to visualize drag
  
** Tinder Drag sample apps

- [[https://github.com/Ivaskuu/tinder_cards][Ivaskuu/tinder_cards]] looks like it does exactly what we want 
  - using GestureDetector and Alignment
- [[https://medium.com/flutterpub/flutter-tinder-like-swipe-cards-2c189ca516eb][Tinder like swipe cards blog]] uses /Draggable/
- [[https://github.com/parikshitgupta1/Flutter-Swipe-][parikshitgupta1/Flutter-Swipe]] uses /Draggable/ 
  
** TODO Tinder like Drag Implementation [2/4]
:LOGBOOK:
CLOCK: [2020-05-11 Mon 19:21]--[2020-05-11 Mon 20:14] =>  0:53
:END:

- [X] port implementation from [[https://github.com/Ivaskuu/tinder_cards][Ivaskuu/tinder_cards]]
- [X] adapt it to our needs
- [ ] add more sample bird pics
- [ ] implement swipe up and down  

* Database Features

** TODO DB Packet Generation [/]

this is all about generating a packet from a curated database

** TODO DB Packet Import [/]

- [ ] install sqlite
- [ ] determine how/where to store databases
- [ ] consume database via queries

*

** HOLD DB Packet Fetching [/]

- [ ] how do we fetch databases in case one would be purchased?

* Quiz Generation

** TODO Algorithm to generate quiz [/]

- [ ] talk to Stephan about the fields to use when picking out similar birds
- [ ] what fields to compare how for different difficulty levels?
- [ ] can we come up with some groups from which we randomly select a string?
- [ ] write out algorithm and test it

** TODO Algorithm Integration with Database [/]

- [ ] query all rows matching a field as determined by algorithm
- [ ] randomly select four rows to serve as possible answers
- [ ] randomly select one of those to be shown and the correct answer
- [ ] prevent dumb duplicates via [[*Smart Sample Selection][Smart Sample Selection]]

* Quiz Adaptation

** TODO Smart Sample Selection [/]

- [ ] learn from user answers which birds need most practice
- [ ] store amount of time birds have been part of a question
- [ ] store how many times user got them right
